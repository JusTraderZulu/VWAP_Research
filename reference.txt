ðŸ‘‰ Cursor Prompt (VWAP EDA Study)

Role & Goal
You are a quant research assistant working inside Trading research/.
Build a clean Jupyter notebook for the VWAP Reversion EDA study, following the EDA â†’ ML decision framework.
This first notebook will only cover EDA â€” not ML training yet.
All reusable functions must go in helpers.py, and each study run should be packaged into studies/<timestamp>_VWAP_Reversion/.

Project Setup

Create/use a venv in .venv under Trading research/.

Install/update requirements from requirements.txt.

Minimal packages (Cursor may add/remove):

polygon-api-client
pandas
numpy
matplotlib
scikit-learn
scipy
plotly


Ensure notebook confirms successful imports.

Data Source

Use Polygon SDK (from polygon import RESTClient).

Read API key from polygon_key.txt.

Fetch aggregates:

Assets: ['BTC-USD','ETH-USD','SOL-USD','SPY','QQQ']

Interval: 5m

Date range: START='2023-01-01' â†’ END='2025-09-01'

Return DataFrame with: open, high, low, close, volume, vwap (compute VWAP if missing).

VWAP Reversion Event Definition

Trigger (at bar t):
Deviation from VWAP > threshold (pct or z-score).

Example: |close_t â€“ VWAP_t| / VWAP_t â‰¥ 0.5%, 1.0%, 1.5%

Outcome (success):
Price reverts to VWAP within next N bars (N = 5, 10, 20).

Up-deviation: success if low_Ï„ â‰¤ VWAP_Ï„ for Ï„ âˆˆ (t, t+N]

Down-deviation: success if high_Ï„ â‰¥ VWAP_Ï„ for Ï„ âˆˆ (t, t+N]

Label: event=1 if success, 0 otherwise.

Record time-to-reversion Ï„â€“t as secondary metric.

Higher-Timeframe Context

Resample closes to 1H.

Rolling Hurst exponent (R/S) over 200 bars, EMA smooth span=8.

Label regimes:

MR if H â‰¤ 0.45

NOISY if 0.45â€“0.55

TREND if H â‰¥ 0.55

Attach regime labels to intraday rows (forward-fill).

EDA Steps (Notebook Sections)

Imports & Config

Parameters for assets, start/end, deviation thresholds, horizon bars, Hurst params.

Environment Setup (venv + deps)

Create .venv, install requirements, confirm imports.

Helpers Import

Import from helpers.py. If missing, generate.

Data Loading

Fetch intraday aggregates for all assets.

Coverage table: start/end dates, row count, missing %.

Plot OHLCV + VWAP sample chart.

Feature Engineering

Compute VWAP (if missing), short MA (20 bars), rolling Ïƒ, ATR.

Add deviation metric (pct or z-score).

Time-of-day buckets.

Hurst Regime Context

Compute rolling Hurst on 1H closes.

Smooth + label regimes.

Plot H with regime shading.

Table: regime proportions per asset.

Event Labeling (VWAP Reversion)

Apply trigger + outcome definition.

Count triggers, successes, failures.

EDA Analysis

Frequency: triggers per asset/side/regime.

Base edge: unconditional P(revert) per asset/regime.

Conditional structure:

P(revert | deviation size, H-regime, side)

By vol terciles, by time-of-day.

Stability: split data halves; compare results.

Cross-asset: side-by-side summary tables.

Visuals:

Heatmap: [Deviation Ã— H-regime] â†’ P(revert)

Reliability curve: deviation size vs empirical P(revert)

Bar chart: base P(revert) by regime & asset

Decision Gate (EDA only)

Print:

STOP if event is rare/flat/inconsistent.

KEEP if event has base edge, structure, stability, consistency â†’ ready for ML later.

Packaging

Save results to studies/<timestamp>_VWAP_Reversion/:

config.json

eda_summary.csv

plots/ (heatmaps, hurst, reliability curves)

README_run.md (auto bullet summary with key findings)

Helpers (helpers.py)

Reusable functions across studies:

Auth & Client: read_polygon_key, get_polygon_client

Data: fetch_aggregates with pagination, retry

Features: compute_vwap, rolling_sigma, atr, time-bucket labeling

Hurst: hurst_rs, rolling_hurst, label_h_regime

Events: deviation_pct_from_vwap, label_vwap_reversion

EDA Utils: conditional prob tables, stability splitters, plotters

Packaging: package_study(...)

Success Criteria

Notebook runs top-to-bottom cleanly.

EDA produces event frequencies, probabilities, plots.

Decision gate prints STOP (with reasons) or KEEP (model later).

Study run neatly packaged into studies/<timestamp>_VWAP_Reversion/.

Please implement now.